- name: Disk usage Check
  shell: printf "\n Disk usage:\n" >> {{OUTPUT}}

- name: Find disk usage
  shell: df | grep '{{item.path}}$' | awk '{usage=$3/$2*100} {printf "%.1f",usage}'
  with_items: "{{DISK}}"
  register: disk_usage

- name: Get time now
  shell: date
  register: time_now

- name: Check disk usage is OK
  shell: 
    printf " %-30s%23s\n" {{item.item.path}} "{{item.stdout}}% (OK)" >> {{OUTPUT}} &&
    printf "[{{time_now.end}}]INFO:disk_usage:'{{item.item.path}}',{{item.stdout}}%%,disk_max,{{item.item.max}}%%\n" >> {{LOG_PATH}}
  with_items: "{{disk_usage.results}}"
  when: item.stdout | int < item.item.max

- name: Get time now
  shell: date
  register: time_now

- name: Check disk usage is not OK
  shell: 
    printf " %-30s%23s\n" {{item.item.path}} "{{item.stdout}}% ({{item.item.max}}%)" >> {{OUTPUT}} &&
    printf "[{{time_now.end}}]ERROR:disk_usage:'{{item.item.path}}',{{item.stdout}}%%,disk_max,{{item.item.max}}%%\n" >> {{LOG_PATH}}
  with_items: "{{disk_usage.results}}"
  when: item.stdout | int >= item.item.max

- name: change all check
  set_fact: 
    all_check: "{{ all_check | int + 1 }}"
  with_items: "{{disk_usage.results}}"
  when: item.stdout | int >= item.item.max