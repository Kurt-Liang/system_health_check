- name: Ping Check
  shell: printf "\n Ping:\n" >> {{OUTPUT}}

- name: Ping {{PING_IP}}
  shell: ping -q -c 1 {{item}} | grep packets | awk '{printf $4}'
  with_items: "{{PING_IP}}"
  register: ping_rcv

- name: Get time now
  shell: date
  register: time_now

- name: Check ping is OK
  shell: 
    printf " %-30s%23s\n" {{item.item}} "OK" >> {{OUTPUT}} &&
    printf "[{{time_now.end}}]INFO:ping_check:{{item.item}},answered\n" >> {{LOG_PATH}}
  with_items: "{{ping_rcv.results}}"
  when: item.stdout == "1"

- name: Get time now
  shell: date
  register: time_now

- name: Check ping is not OK
  shell: 
    printf " %-30s%23s\n" {{item.item}} "ERROR" >> {{OUTPUT}} &&
    printf "[{{time_now.end}}]ERROR:ping_check:{{item.item}},did not answer\n" >> {{LOG_PATH}}
  with_items: "{{ping_rcv.results}}"
  when: item.stdout == "0"

- name: change all check
  set_fact: 
    all_check: "{{ all_check | int + 1 }}"
  with_items: "{{ping_rcv.results}}"
  when: item.stdout == "0"