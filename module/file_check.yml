- name: File Check
  shell: printf "\n File check:\n" >> {{OUTPUT}}

- name: File path {{FILE_PATH}}
  shell: ls {{item}} | awk '{printf $0}'
  with_items: "{{FILE_PATH}}"
  register: file_erv

- name: Get time now
  shell: date
  register: time_now

- name: File check is OK
  shell: 
    printf " %-30s%23s\n" {{item.item.split("/")[item.item.split("/")|length-1]}} "OK" >> {{OUTPUT}} &&
    printf "[{{time_now.end}}]INFO:file_check:'{{item.item}}',OK\n" >> {{LOG_PATH}}
  with_items: "{{file_erv.results}}"
  when: item.stdout != "" and item.stderr == ""

- name: Get time now
  shell: date
  register: time_now

- name: File check is not OK
  shell: 
    printf " %-30s%23s\n" {{item.item.split("/")[item.item.split("/")|length-1]}} "no found" >> {{OUTPUT}} &&
    printf "[{{time_now.end}}]ERROR:file_check:'{{item.item}}',no found\n" >> {{LOG_PATH}}
  with_items: "{{file_erv.results}}"
  when: item.stdout == "" and item.stderr != ""

- name: change all check
  set_fact: 
    all_check: "{{ all_check | int + 1 }}"
  with_items: "{{file_erv.results}}"
  when: item.stdout == "" and item.stderr != ""