- name: NTPQ Check
  shell: printf "\n NTPQ:\n" >> {{OUTPUT}}

- name: NTPQ Test
  shell: /usr/sbin/ntpq -p | grep {{item}} | awk '{printf $9}'
  with_items: "{{NTPQ_CHECK}}"
  register: ntpq_check

- name: test
  debug:
    msg: "{{ntpq_check}}"

- name: Get time now
  shell: date
  register: time_now

- name: Check NTPQ is OK
  shell: 
    printf " %-30s%23s\n" {{item.item}} "{{item.stdout}} sec" >> {{OUTPUT}} &&
    printf "[{{time_now.end}}]INFO:ntpq_check:{{item.item}},{{item.stdout}} sec\n" >> {{LOG_PATH}}
  with_items: "{{ntpq_check.results}}"
  when: item.stdout != ""

- name: Get time now
  shell: date
  register: time_now

- name: Check NTPQ is not OK
  shell: 
    printf " %-30s%23s\n" {{item.item}} "no found" >> {{OUTPUT}} &&
    printf "[{{time_now.end}}]ERROR:ntpq_check:{{item.item}},'{{item.stderr}}'\n" >> {{LOG_PATH}}
  with_items: "{{ntpq_check.results}}"
  when: item.stdout == ""

- name: change all check
  set_fact: 
    all_check: "{{ all_check | int + 1 }}"
  with_items: "{{ntpq_check.results}}"
  when: item.stdout == ""